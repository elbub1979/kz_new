<h2><%= t('.update') %> <%= resource_name.to_s.humanize %></h2>

<%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
  <%= render "devise/shared/error_messages", resource: resource %>

  <div class="field my-1">
    <%= f.label t('.fname') %><br/>
    <%= f.text_field :fname, autofocus: true, autocomplete: "fname" %>
  </div>

  <div class="field my-1">
    <%= f.label t('.pname') %><br/>
    <%= f.text_field :pname, autofocus: true, autocomplete: "pname" %>
  </div>

  <div class="field my-1">
    <%= f.label t('.lname') %><br/>
    <%= f.text_field :lname, autofocus: true, autocomplete: "lname" %>
  </div>

  <div class="field my-1">
    <%= f.label t('.email') %><br />
    <%= f.email_field :email, autofocus: true, autocomplete: "email" %>
  </div>

  <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
    <div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
  <% end %>

  <div class="field my-1">
    <%= f.label t('.password') %> <i>(leave blank if you don't want to change it)</i><br />
    <%= f.password_field :password, autocomplete: "new-password" %>
    <% if @minimum_password_length %>
      <br />
      <em><%= @minimum_password_length %> <%= t('.characters_minimum') %>characters minimum</em>
    <% end %>
  </div>

  <div class="field my-1">
    <%= f.label t('.password_confirmation') %><br />
    <%= f.password_field :password_confirmation, autocomplete: "new-password" %>
  </div>

  <div class="field my-1">
    <%= f.label t('.current_password') %> <i>(we need your current password to confirm your changes)</i><br />
    <%= f.password_field :current_password, autocomplete: "current-password" %>
  </div>

  <div class="actions my-1">
    <%= f.submit t('.update') %>
  </div>
<% end %>

<h3><%= t('.cancel_my_account') %></h3>

<p>Unhappy? <%= button_to t('.cancel_my_account'), registration_path(resource_name), data: { confirm: t('.are_you_sure?') }, method: :delete %></p>

<%= link_to t('.back'), :back %>
